#include "xil_printf.h"
#include "ff.h"
#include "sd_card.h"
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include "xil_io.h"
#include "xparameters.h"
#include "xil_types.h"
#include "xil_cache.h"
#include "ff.h"
#include "xdevcfg.h"
#include "picture.h"

#define H_STRIDE            1280
#define H_ACTIVE            1280
#define V_ACTIVE            720
#define VIDEO_LENGTH  (H_STRIDE*V_ACTIVE)

#define VDMA_BASEADDR   XPAR_AXI_VDMA_0_BASEADDR
#define DDR_BASEADDR    0x00000000
#define VIDEO_BASEADDR0 0x01000000
#define BUF_SIZE ((H_STRIDE*V_ACTIVE)*3)



void VDMA_init()
{
	int i;
	for(i=0;i<VIDEO_LENGTH;i++)
	{
		Xil_Out32(VIDEO_BASEADDR0+i*4,0);//黑色背景
	}
	Xil_DCacheFlush();
	Xil_Out32((VDMA_BASEADDR + 0x000), 0x3);//0011
	Xil_Out32((VDMA_BASEADDR + 0x05c), VIDEO_BASEADDR0);
	Xil_Out32((VDMA_BASEADDR + 0x060), VIDEO_BASEADDR0);
	Xil_Out32((VDMA_BASEADDR + 0x064), VIDEO_BASEADDR0);
	Xil_Out32((VDMA_BASEADDR + 0x058), (H_STRIDE*4));
	Xil_Out32((VDMA_BASEADDR + 0x054), (H_ACTIVE*4));
	Xil_Out32((VDMA_BASEADDR + 0x050), V_ACTIVE);

}
void show_img( const unsigned char * addr, u32 size_x, u32 size_y)
{
	u32 x=0;
	u32 y=0;
	u32 r,g,b;
	for(y=size_y;y>0;y--)
	{
		for(x=0;x<size_x;x++)
		{
			b = *(addr++);
			g = *(addr++);
			r = *(addr++);
			Xil_Out32((VIDEO_BASEADDR0+(((y-1)*size_x)+x)*4),((r<<16)|(g<<8)|(b<<0)));
		}
	}

	Xil_DCacheFlush();
}

int main()
{
  VDMA_init();
  show_img(gImage_picture , 1280 , 720);

}
